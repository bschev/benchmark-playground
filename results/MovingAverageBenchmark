Benchmark                                                (windowSize)  Mode  Cnt        Score        Error  Units
MovingAverageBenchmark.measureMovingAvgArrayAvg                   100  avgt    6       16.555 ±      0.390  ns/op
MovingAverageBenchmark.measureMovingAvgArrayAvg                  1000  avgt    6       22.478 ±     18.891  ns/op
MovingAverageBenchmark.measureMovingAvgArrayAvg                 10000  avgt    6       21.670 ±     15.893  ns/op
MovingAverageBenchmark.measureMovingAvgArrayAvg                100000  avgt    6       16.388 ±      0.195  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeAvg              100  avgt    6       22.541 ±      0.478  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeAvg             1000  avgt    6       22.800 ±      0.413  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeAvg            10000  avgt    6       23.174 ±      0.330  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeAvg           100000  avgt    6       23.064 ±      1.581  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeLoop             100  avgt    6      356.698 ±      9.083  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeLoop            1000  avgt    6     2799.916 ±     71.413  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeLoop           10000  avgt    6    28759.728 ±    552.182  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeLoop          100000  avgt    6  1499312.002 ± 120274.457  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeStream           100  avgt    6     1024.769 ±      9.760  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeStream          1000  avgt    6     9490.903 ±     87.111  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeStream         10000  avgt    6   151207.116 ±   7714.806  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeStream        100000  avgt    6  2002051.814 ± 449111.041  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeSum              100  avgt    6       18.353 ±      0.311  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeSum             1000  avgt    6       18.403 ±      0.266  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeSum            10000  avgt    6       19.107 ±      0.440  ns/op
MovingAverageBenchmark.measureMovingAvgArrayDequeSum           100000  avgt    6       20.306 ±      3.890  ns/op
MovingAverageBenchmark.measureMovingAvgArraySum                   100  avgt    6       14.374 ±      3.790  ns/op
MovingAverageBenchmark.measureMovingAvgArraySum                  1000  avgt    6       13.487 ±      0.850  ns/op
MovingAverageBenchmark.measureMovingAvgArraySum                 10000  avgt    6       17.338 ±     12.521  ns/op
MovingAverageBenchmark.measureMovingAvgArraySum                100000  avgt    6       13.031 ±      0.223  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListAvg              100  avgt    6       35.524 ±      0.932  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListAvg             1000  avgt    6       36.637 ±      1.720  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListAvg            10000  avgt    6       36.056 ±      5.397  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListAvg           100000  avgt    6       35.970 ±      2.235  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListSum              100  avgt    6       34.488 ±      0.860  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListSum             1000  avgt    6       34.850 ±      2.023  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListSum            10000  avgt    6       35.269 ±      0.672  ns/op
MovingAverageBenchmark.measureMovingAvgLinkedListSum           100000  avgt    6       37.916 ±      5.060  ns/op
